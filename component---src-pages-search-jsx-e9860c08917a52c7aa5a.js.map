{"version":3,"file":"component---src-pages-search-jsx-e9860c08917a52c7aa5a.js","mappings":"iOAcA,MAAMA,EAAgBC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAVJ,CAAU,+DAiDhC,UA1CeK,IAAe,IAAd,KAAEC,GAAMD,EACtB,MAAM,MAAEE,EAAK,YAAEC,EAAW,QAAEC,GAAYC,EAAAA,EAClCC,EAAQL,EAAKM,kBAAkBC,OAE/B,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,IAE7BC,GAAgBC,EAAAA,EAAAA,aACpBP,EAAMQ,QAAQC,IACZ,MAAM,YAAEC,EAAW,gBAAEC,GAAoBF,GACnC,MAAEb,GAAUc,EACZE,EAAaT,EAAMU,oBAEzB,QAAIF,EAAgBE,oBAAoBC,SAASF,IAE1ChB,EAAMiB,oBAAoBC,SAASF,EAAW,IAEvD,CAACT,IAGH,OACEY,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACrB,MAAOA,EAAOC,YAAaA,EAAaqB,IAAKpB,IAClDiB,EAAAA,cAACI,EAAAA,EAAa,CAACC,KAAM,KACrBL,EAAAA,cAAC3B,EAAa,KACZ2B,EAAAA,cAACM,EAAAA,EAAK,CACJC,aAAchB,EAAciB,OAC5BC,MAAM,OACNC,IAAK,GACLC,UAAU,EACVC,GAAI,CAAEC,IAAK,OAAQC,KAAM,SAE3Bd,EAAAA,cAACe,EAAAA,EAAS,CACRC,SAAWC,GAAM5B,EAAS4B,EAAEC,OAAOC,OACnCC,YAAY,YAGhBpB,EAAAA,cAACqB,EAAAA,EAAO,MACRrB,EAAAA,cAACsB,EAAAA,EAAQ,CAACC,SAAUhC,IACb,C","sources":["webpack://the-great-pang/./src/pages/search.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport SEO from 'components/SEO';\nimport { graphql } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport PostList from 'components/PostList';\nimport TextField from 'components/TextField';\nimport Badge from '@mui/material/Badge';\nimport VerticalSpace from 'components/VerticalSpace';\n\nimport blogConfig from '../../blog-config';\nimport Divider from '../components/Divider';\n\nconst SearchWrapper = styled.div`\n  margin-top: 20px;\n  @media (max-width: 768px) {\n    padding: 0 13px;\n  }\n`;\n\nconst Search = ({ data }) => {\n  const { title, description, siteUrl } = blogConfig;\n  const posts = data.allMarkdownRemark.nodes;\n\n  const [query, setQuery] = useState('');\n\n  const filteredPosts = useCallback(\n    posts.filter((post) => {\n      const { frontmatter, rawMarkdownBody } = post;\n      const { title } = frontmatter;\n      const lowerQuery = query.toLocaleLowerCase();\n\n      if (rawMarkdownBody.toLocaleLowerCase().includes(lowerQuery)) return true;\n\n      return title.toLocaleLowerCase().includes(lowerQuery);\n    }),\n    [query]\n  );\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} url={siteUrl} />\n      <VerticalSpace size={10} />\n      <SearchWrapper>\n        <Badge\n          badgeContent={filteredPosts.length}\n          color=\"info\"\n          max={99}\n          showZero={true}\n          sx={{ top: '12px', left: '2px' }}\n        ></Badge>\n        <TextField\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Search\"\n        />\n      </SearchWrapper>\n      <Divider />\n      <PostList postList={filteredPosts} />\n    </Layout>\n  );\n};\n\nexport default Search;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/contents/posts/\" } }\n    ) {\n      nodes {\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n          emoji\n          series\n        }\n        rawMarkdownBody\n      }\n    }\n  }\n`;\n"],"names":["SearchWrapper","styled","div","withConfig","displayName","componentId","_ref","data","title","description","siteUrl","blogConfig","posts","allMarkdownRemark","nodes","query","setQuery","useState","filteredPosts","useCallback","filter","post","frontmatter","rawMarkdownBody","lowerQuery","toLocaleLowerCase","includes","React","Layout","SEO","url","VerticalSpace","size","Badge","badgeContent","length","color","max","showZero","sx","top","left","TextField","onChange","e","target","value","placeholder","Divider","PostList","postList"],"sourceRoot":""}