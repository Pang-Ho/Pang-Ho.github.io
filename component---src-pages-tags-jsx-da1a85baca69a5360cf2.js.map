{"version":3,"file":"component---src-pages-tags-jsx-da1a85baca69a5360cf2.js","mappings":"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","sources":["webpack://the-great-pang/./src/components/TagList/index.jsx","webpack://the-great-pang/./src/components/PostList/index.jsx","webpack://the-great-pang/./node_modules/decode-uri-component/index.js","webpack://the-great-pang/./node_modules/split-on-first/index.js","webpack://the-great-pang/./node_modules/filter-obj/index.js","webpack://the-great-pang/./node_modules/query-string/base.js","webpack://the-great-pang/./node_modules/query-string/index.js","webpack://the-great-pang/./src/pages/tags.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst TagListWrapper = styled.div`\n  margin-bottom: 16px;\n  word-break: break-all;\n`;\n\nconst TagLink = styled.div`\n  display: inline-block;\n  padding: 3.6px 11.2px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 50px;\n  background-color: ${(props) =>\n    props.selected\n      ? props.theme.colors.selectedTagBackground\n      : props.theme.colors.tagBackground};\n  color: ${(props) =>\n    props.selected\n      ? props.theme.colors.selectedTagText\n      : props.theme.colors.tagText};\n  text-decoration: none;\n  font-size: 14.4px;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.selected\n        ? props.theme.colors.hoveredSelectedTagBackground\n        : props.theme.colors.hoveredTagBackground};\n  }\n`;\n\nconst spaceToDash = (text) => {\n  return text;\n  // return text.replace(/\\s+/g, \"-\")\n};\n\nconst TagList = ({ tagList, count, selected }) => {\n  if (!tagList) return null;\n\n  if (!count) {\n    return (\n      <TagListWrapper>\n        {tagList.map((tag, i) => (\n          <Link key={JSON.stringify({ tag, i })} to={`/tags?q=${tag}`}>\n            <TagLink>{spaceToDash(tag)}</TagLink>\n          </Link>\n        ))}\n      </TagListWrapper>\n    );\n  }\n\n  return (\n    <TagListWrapper>\n      {tagList.map((tag, i) => (\n        <Link\n          key={JSON.stringify({ tag, i })}\n          to={\n            selected === tag.fieldValue ? '/tags' : `/tags?q=${tag.fieldValue}`\n          }\n        >\n          <TagLink selected={tag.fieldValue === selected}>\n            {spaceToDash(tag.fieldValue)} ({tag.totalCount})\n          </TagLink>\n        </Link>\n      ))}\n    </TagListWrapper>\n  );\n};\n\nexport default TagList;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\n\nimport { Link } from 'gatsby';\n\nimport Title from 'components/Title';\nimport Divider from 'components/Divider';\nimport TagList from 'components/TagList';\nimport DisplayAds from '../DisplayAd';\n\nconst PostListWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 10px;\n  }\n`;\n\nconst PostWrapper = styled.div`\n  position: relative;\n  top: 0;\n  transition: all 0.5s;\n\n  @media (max-width: 768px) {\n    padding: 0 5px;\n  }\n`;\n\nconst ContainerOfDateAndSeries = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Date = styled.p`\n  // margin-bottom: 16px;\n  padding: 0;\n  margin: 0;\n  font-size: 14.4px;\n  color: ${(props) => props.theme.colors.tertiaryText};\n`;\nconst SeriesName = styled.p`\n  font-size: 14.4px;\n  // float: right;\n  color: ${(props) => props.theme.colors.text};\n  text-decoration-line: underline;\n  padding: 0;\n  margin: 0;\n`;\n\nconst Excerpt = styled.p`\n  margin-bottom: 32px;\n  line-height: 1.7;\n  font-size: 15px;\n  color: ${(props) => props.theme.colors.secondaryText};\n  word-break: break-all;\n`;\n\nconst EmojiWrapper = styled.div`\n  float: left;\n  margin-right: 15px;\n`;\n\nconst checkIsScrollAtBottom = () => {\n  return (\n    document.documentElement.scrollHeight -\n      document.documentElement.scrollTop <=\n    document.documentElement.clientHeight + 100\n  );\n};\n\nconst PostList = ({ postList }) => {\n  const [postCount, setPostCount] = useState(10);\n\n  const handleMoreLoad = _.throttle(() => {\n    if (checkIsScrollAtBottom() && postCount < postList.length) {\n      setTimeout(() => setPostCount(postCount + 10), 300);\n    }\n  }, 250);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleMoreLoad);\n\n    return () => {\n      window.removeEventListener('scroll', handleMoreLoad);\n    };\n  }, [postCount, postList]);\n\n  useEffect(() => {\n    setPostCount(10);\n  }, [postList]);\n\n  return (\n    <PostListWrapper>\n      {postList.slice(0, postCount).map((post, i) => {\n        const { title, date, tags, emoji, series } = post.frontmatter;\n        const { excerpt } = post;\n        const { slug } = post.fields;\n        return (\n          <React.Fragment key={JSON.stringify({ slug, date })}>\n            <PostWrapper>\n              <Title size=\"bg\">\n                {emoji ? <EmojiWrapper>{emoji}</EmojiWrapper> : ''}\n                <Link to={slug}>{title}</Link>\n              </Title>\n              <ContainerOfDateAndSeries>\n                <Date>{date}</Date>\n                <Link to={`/series/${_.replace(series, /\\s/g, '-')}`}>\n                  <SeriesName>{series}</SeriesName>\n                </Link>\n              </ContainerOfDateAndSeries>\n              <Excerpt>{excerpt}</Excerpt>\n              <TagList tagList={tags} />\n            </PostWrapper>\n            {(i == 0 || i == 2) && <DisplayAds />}\n            {postCount - 1 !== i && postList.length - 1 !== i && (\n              <Divider mt=\"48px\" mb=\"32px\" />\n            )}\n          </React.Fragment>\n        );\n      })}\n    </PostListWrapper>\n  );\n};\n\nexport default PostList;\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tresult[key] = Boolean(value) && typeof value === 'object' && !Array.isArray(value) ? keysSorter(value) : value;\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport SEO from 'components/SEO';\nimport filter from 'lodash/filter';\n\nimport { graphql, navigate } from 'gatsby';\n\nimport queryString from 'query-string';\n\nimport Layout from 'components/Layout';\nimport TagList from 'components/TagList';\nimport PostList from 'components/PostList';\nimport VerticleSpace from 'components/VerticalSpace';\n\nimport blogConfig from '../../blog-config';\n\nconst TagListWrapper = styled.div`\n  margin-top: 20px;\n\n  @media (max-width: 768px) {\n    padding: 0 15px;\n  }\n`;\nconst Subtitle = styled.h3`\n  display: inline-block;\n  padding: 2px 0px;\n  margin-top: 32px;\n  margin-bottom: 8px;\n  width: 100%;\n  text-align: center;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${(props) => props.theme.colors.text};\n  color: ${(props) => props.theme.colors.bodyBackground};\n  letter-spacing: -1px;\n`;\n\nconst TagsPage = ({ data }) => {\n  const { title, description, siteUrl } = blogConfig;\n  const tags = _.sortBy(data.allMarkdownRemark.group, ['totalCount']).reverse();\n  const posts = data.allMarkdownRemark.nodes;\n\n  const [selected, setSelected] = useState();\n  const [filteredPosts, setFilteredPosts] = useState([]);\n\n  let query = null;\n  if (typeof document !== 'undefined') {\n    query = document.location.search;\n  }\n\n  useEffect(() => {\n    if (!selected) {\n      setFilteredPosts(posts);\n      return;\n    }\n\n    setFilteredPosts(\n      filter(posts, (post) => post.frontmatter.tags.indexOf(selected) !== -1)\n    );\n  }, [selected]);\n\n  useEffect(() => {\n    const q = queryString.parse(query)['q'];\n    setSelected(q);\n  }, [query]);\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} url={siteUrl} />\n      <Subtitle>TAGS</Subtitle>\n      <TagListWrapper>\n        <TagList\n          count\n          tagList={tags}\n          selected={selected}\n          onClick={(tag) => {\n            console.log(tag, selected);\n            if (tag === selected) {\n              navigate('/tags');\n              alert('zz');\n            } else setSelected(tag);\n          }}\n        />\n      </TagListWrapper>\n\n      <VerticleSpace size={32} />\n\n      <PostList postList={filteredPosts} />\n    </Layout>\n  );\n};\n\nexport default TagsPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/contents/posts/\" } }\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      nodes {\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          update(formatString: \"MMM DD, YYYY\")\n          title\n          tags\n          emoji\n          series\n        }\n      }\n    }\n  }\n`;\n"],"names":["TagListWrapper","styled","div","withConfig","displayName","componentId","TagLink","props","selected","theme","colors","selectedTagBackground","tagBackground","selectedTagText","tagText","hoveredSelectedTagBackground","hoveredTagBackground","_ref","tagList","count","React","map","tag","i","Link","key","JSON","stringify","to","fieldValue","totalCount","PostListWrapper","PostWrapper","ContainerOfDateAndSeries","Date","p","tertiaryText","SeriesName","text","Excerpt","secondaryText","EmojiWrapper","postList","postCount","setPostCount","useState","handleMoreLoad","_throttle","document","documentElement","scrollHeight","scrollTop","clientHeight","length","setTimeout","useEffect","window","addEventListener","removeEventListener","slice","post","title","date","tags","emoji","series","frontmatter","excerpt","slug","fields","Title","size","_replace","TagList","DisplayAds","Divider","mt","mb","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","entries","Object","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","isNullOrUndefined","value","strictUriEncode","encodeURIComponent","x","charCodeAt","toString","toUpperCase","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","filter","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","Subtitle","h3","bodyBackground","data","description","siteUrl","blogConfig","_sortBy","allMarkdownRemark","group","reverse","posts","nodes","setSelected","filteredPosts","setFilteredPosts","location","search","q","Layout","SEO","onClick","console","log","navigate","alert","VerticleSpace","PostList"],"sourceRoot":""}