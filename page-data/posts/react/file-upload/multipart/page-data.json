{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/react/file-upload/multipart/","result":{"data":{"site":{"siteMetadata":{"title":"THE GREAT PANG"}},"markdownRemark":{"id":"101eb83b-5428-5522-ace9-76cd8d4e33b7","excerpt":"리액트에서 URL 이동시 감지하여 원하는 로직을 넣어보자 🧪 테스트 환경 React v18 AWS SDK for Java1.x 백엔드 : AWS EKS 환경 프론트 : AWS S3 Nginx 환경 배경 기본적으로 업로드 평균 속도는 5MB/s 라고한다. 파일을 Presigned URL에 통째로 올리는 방식으로 개발해두고 50MB 파일이 약 10초 정도 걸…","html":"<h1 id=\"리액트에서-URL-이동시-감지하여-원하는-로직을-넣어보자\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%97%90%EC%84%9C-URL-%EC%9D%B4%EB%8F%99%EC%8B%9C-%EA%B0%90%EC%A7%80%ED%95%98%EC%97%AC-%EC%9B%90%ED%95%98%EB%8A%94-%EB%A1%9C%EC%A7%81%EC%9D%84-%EB%84%A3%EC%96%B4%EB%B3%B4%EC%9E%90\" aria-label=\"리액트에서 URL 이동시 감지하여 원하는 로직을 넣어보자 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>리액트에서 URL 이동시 감지하여 원하는 로직을 넣어보자</h1>\n<h2 id=\"-테스트-환경\" style=\"position:relative;\"><a href=\"#-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%99%98%EA%B2%BD\" aria-label=\" 테스트 환경 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>🧪 테스트 환경</h2>\n<blockquote>\n<p>React v18</p>\n<p>AWS SDK for Java1.x</p>\n<p>백엔드 : AWS EKS 환경</p>\n<p>프론트 : AWS S3 Nginx 환경</p>\n</blockquote>\n<h2 id=\"배경\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EA%B2%BD\" aria-label=\"배경 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>배경</h2>\n<p>기본적으로 업로드 평균 속도는 5MB/s 라고한다.</p>\n<p>파일을 Presigned URL에 통째로 올리는 방식으로 개발해두고 50MB 파일이 약 10초 정도 걸렸었다.</p>\n<p>문제가 생겼다. 고객쪽 네트워크 망이 상태가 안좋은지 업로드 속도가 심각하게 느려졌다.</p>\n<p>네트워크 쪽에서 처리를 해주겠지만, 우선적으로 시스템 내부에서 개선할 내용을 찾아보자.</p>\n<h2 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>목표</h2>\n<ol>\n<li>Presigned URL 속도 체크</li>\n<li>4가지 방법 구현 후 속도 비교\n<ol>\n<li>Presigned URL을 이용한 파일 업로드</li>\n<li>Presigned URL을 이용한 Multipart File 업로드</li>\n<li>서버에 파일 업로드 하여 S3에 업로드</li>\n<li>서버에 Multipart File을 업로드하여 S3에 업로드</li>\n</ol>\n</li>\n<li>네트워크 개선 후 파일 업로드 속도 비교</li>\n</ol>\n<h2 id=\"구현\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84\" aria-label=\"구현 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>구현</h2>\n<h3 id=\"구현하기-앞서-업로드-속도-체크\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%95%9E%EC%84%9C-%EC%97%85%EB%A1%9C%EB%93%9C-%EC%86%8D%EB%8F%84-%EC%B2%B4%ED%81%AC\" aria-label=\"구현하기 앞서 업로드 속도 체크 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>구현하기 앞서 업로드 속도 체크</h3>\n<ul>\n<li>브라우저에서 S3 직접 파일 전송\n<ul>\n<li>기존 50MB / 10초 => 네트워크 망 상태가 안좋아진 상황 : 50MB / 14분</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-Presigned-URL-multipart-파일-업로드\" style=\"position:relative;\"><a href=\"#1-Presigned-URL-multipart-%ED%8C%8C%EC%9D%BC-%EC%97%85%EB%A1%9C%EB%93%9C\" aria-label=\"1 Presigned URL multipart 파일 업로드 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>1. Presigned URL multipart 파일 업로드</h3>\n<h4 id=\"React\" style=\"position:relative;\"><a href=\"#React\" aria-label=\"React permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>React</h4>\n<p>동작 방식</p>\n<ol>\n<li>프론트에서 올릴 파일을 자른다.(Multipart로 파일을 자른다.)</li>\n<li>프론트에서 올릴 파일 정보를 백엔드로 송신하여 백엔드에서 Presigned URL을 받아온다.\n<ul>\n<li>프론트에서 S3로부터 Presigned URL을 받지 않고 백엔드에서 받도록 하였다.</li>\n</ul>\n</li>\n<li>Multipart File을 Presigned URL을 이용해 S3에 업로드한다.</li>\n<li>Multipart File이 모두 업로드되면, S3에서 합칠 수 있도록 백엔드에 요청한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Multipart File로 파일 업로드 로직</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> FileUploader <span class=\"token operator\">=</span> <span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>files<span class=\"token punctuation\">,</span> setFiles<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> useState<span class=\"token operator\">&lt;</span>File<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token function\">useImperativeHandle</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      <span class=\"token function-variable function\">saveFiles</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> onSaveFiles<span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSaveFiles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// 1. presigned Url multipart 파일 업로드</span>\r\n      <span class=\"token keyword\">await</span> <span class=\"token function\">processUploadMultipartFilesWithPresignedUrl</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token operator\">...</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">// 1. presigned Url로 파일을 올리는 로직</span>\r\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">processUploadMultipartFilesWithPresignedUrl</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">files</span><span class=\"token operator\">:</span> File<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// 파일을 얼마 단위로 자를지 설정한다. AWS S3에서는 5MB를 최소 크기로 잡는다.</span>\r\n      <span class=\"token keyword\">const</span> chunkSize <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">const</span> partCount <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>size <span class=\"token operator\">/</span> chunkSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">const</span> uploadPromises <span class=\"token operator\">=</span> files<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\r\n          <span class=\"token function\">processUploadMultipartFileWithPresignedUrl</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> chunkSize<span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> file<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token string\">'fulfilled'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> file<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token string\">'rejected'</span><span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">allSettled</span><span class=\"token punctuation\">(</span>uploadPromises<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">successFiles</span><span class=\"token operator\">:</span> File<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">failedFiles</span><span class=\"token operator\">:</span> File<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n      results<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> status<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> reason <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">===</span> <span class=\"token string\">'fulfilled'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\r\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token string\">'fulfilled'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            successFiles<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>res<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 업로드 실패</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            failedFiles<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>files<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 업로드 중 알 수 없는 실패</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> reason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          failedFiles<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\r\n        <span class=\"token string\">'✅ 성공한 파일:'</span><span class=\"token punctuation\">,</span>\r\n        successFiles<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\r\n        <span class=\"token string\">'❌ 실패한 파일:'</span><span class=\"token punctuation\">,</span>\r\n        failedFiles<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">...</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">processUploadMultipartFileWithPresignedUrl</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>\r\n      <span class=\"token parameter\"><span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> File<span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">chunkSize</span><span class=\"token operator\">:</span> number</span>\r\n    <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> partCount <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>size <span class=\"token operator\">/</span> chunkSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// 1. 프론트에서 올릴 파일 정보를 백엔드로 송신하여 백엔드에서 Presigned URL을 받아온다.</span>\r\n        <span class=\"token keyword\">const</span> FileUploadStartResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/upload/presigned-url/start\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token literal-property property\">fileSize</span><span class=\"token operator\">:</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n            <span class=\"token literal-property property\">fileName</span><span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\r\n            <span class=\"token literal-property property\">fileType</span><span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span>\r\n            <span class=\"token literal-property property\">partCount</span><span class=\"token operator\">:</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>partCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n\r\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> uploadId<span class=\"token punctuation\">,</span> preSignedUrlList<span class=\"token punctuation\">,</span> key <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> FileUploadStartResponse<span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// const parts: { partNumber: number; eTag: string }[] = [];</span>\r\n\r\n        <span class=\"token comment\">// 2. 자른 파일(Multipart File)을 Presigned URL에 올린다.</span>\r\n        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">uploadPart</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token keyword\">const</span> start <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> chunkSize<span class=\"token punctuation\">;</span>\r\n          <span class=\"token keyword\">const</span> end <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span> start <span class=\"token operator\">+</span> chunkSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>preSignedUrlList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> blob<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n              <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token comment\">/*\r\n              2-1. 파트 업로드시 S3에서 Response Header에 eTag 값을 보내주는데, 가지고 있어야한다.\r\n              이 값을 제대로 받으려면, s3 header cors 설정이 필요하다.\r\n           */</span>\r\n          <span class=\"token keyword\">const</span> eTag <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>etag <span class=\"token operator\">||</span> res<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>ETag <span class=\"token operator\">||</span> res<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>Etag<span class=\"token punctuation\">;</span>\r\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">partNumber</span><span class=\"token operator\">:</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">eTag</span><span class=\"token operator\">:</span> eTag<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">// 3. 병렬 업로드</span>\r\n        <span class=\"token keyword\">const</span> uploadPromises <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> partCount <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">uploadPart</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">const</span> parts <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>uploadPromises<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">// 4. 완료요청(완료 요청을 해야 part로 올라간 파일들을 S3내에서 합쳐준다)</span>\r\n        <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/upload/presigned-url/complete\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">uploadId</span><span class=\"token operator\">:</span> uploadId<span class=\"token punctuation\">,</span>\r\n          <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> key<span class=\"token punctuation\">,</span>\r\n          <span class=\"token literal-property property\">parts</span><span class=\"token operator\">:</span> parts<span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>file<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 업로드 실패</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"SpringBoot\" style=\"position:relative;\"><a href=\"#SpringBoot\" aria-label=\"SpringBoot permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>SpringBoot</h4>\n<p>동작방식</p>\n<ol>\n<li>/api/upload/presigned-url/start 에서는 파일 정보를 받아 Presigned URL을 만들어 보내준다.</li>\n<li>/api/upload/presigned-url/complete 에서는 Multipart File을 S3에서 하나의 파일로 합쳐지도록 S3 메서드를 호출한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/api/upload/presigned-url/start\"</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FileUploadStartResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">startMultipartUpload</span><span class=\"token punctuation\">(</span>\r\n          <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileName\"</span><span class=\"token punctuation\">)</span> <span class=\"token annotation punctuation\">@NotBlank</span> <span class=\"token class-name\">String</span> fileName\r\n          <span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileSize\"</span><span class=\"token punctuation\">)</span> <span class=\"token annotation punctuation\">@NotBlank</span> <span class=\"token class-name\">String</span> fileSize\r\n          <span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileType\"</span><span class=\"token punctuation\">)</span> <span class=\"token annotation punctuation\">@NotBlank</span> <span class=\"token class-name\">String</span> fileType\r\n          <span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"partCount\"</span><span class=\"token punctuation\">)</span> <span class=\"token annotation punctuation\">@NotBlank</span> <span class=\"token keyword\">int</span> partCount\r\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// AWS SDK</span>\r\n      <span class=\"token class-name\">AmazonS3</span> s3Client <span class=\"token operator\">=</span> <span class=\"token class-name\">AmazonS3ClientBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">standard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">withRegion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Regions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AP_NORTHEAST_2</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token comment\">// S3에 저장될 키 값(S3 내에서는 파일명으로 봐도 된다.)</span>\r\n      <span class=\"token class-name\">String</span> key <span class=\"token operator\">=</span> <span class=\"token string\">\"upload/\"</span> <span class=\"token operator\">+</span> <span class=\"token constant\">UUID</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">+</span> fileName<span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token class-name\">ObjectMetadata</span> metadata <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      metadata<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token class-name\">String</span> uploadId <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> preSignedUrls <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">InitiateMultipartUploadRequest</span> initRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InitiateMultipartUploadRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>s3 bucket 주소<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withObjectMetadata</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        uploadId <span class=\"token operator\">=</span> s3Client<span class=\"token punctuation\">.</span><span class=\"token function\">initiateMultipartUpload</span><span class=\"token punctuation\">(</span>initRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUploadId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">// Pre-Signed URL 만료 시간 (60분 후)</span>\r\n        <span class=\"token class-name\">Date</span> expiration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">long</span> expTimeMillis <span class=\"token operator\">=</span> expiration<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// 10분 후 만료</span>\r\n        expTimeMillis <span class=\"token operator\">+=</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMillis</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        expiration<span class=\"token punctuation\">.</span><span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span>expTimeMillis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">// 각 part에 대한 Pre-Signed URL 생성</span>\r\n\r\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> partCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token class-name\">GeneratePresignedUrlRequest</span> generatePresignedUrlRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GeneratePresignedUrlRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>s3 bucket 주소<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">withMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PUT</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">withExpiration</span><span class=\"token punctuation\">(</span>expiration<span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">withContentType</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            generatePresignedUrlRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addRequestParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"partNumber\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            generatePresignedUrlRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addRequestParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uploadId\"</span><span class=\"token punctuation\">,</span> uploadId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n            <span class=\"token class-name\">URL</span> url <span class=\"token operator\">=</span> s3Client<span class=\"token punctuation\">.</span><span class=\"token function\">generatePresignedUrl</span><span class=\"token punctuation\">(</span>generatePresignedUrlRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            preSignedUrls<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INTERNAL_SERVER_ERROR</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Presigned URL failed for file: \"</span> <span class=\"token operator\">+</span> fileName <span class=\"token operator\">+</span> <span class=\"token string\">\". Error: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span>\r\n\r\n      <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileUploadStartResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">uploadId</span><span class=\"token punctuation\">(</span>uploadId<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">preSignedUrlList</span><span class=\"token punctuation\">(</span>preSignedUrls<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n\r\n  <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/api/upload/presigned-url/complete\"</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">completeMultipartUpload</span><span class=\"token punctuation\">(</span>\r\n          <span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">FileUploadCompleteRequest</span> fileUploadCompleteRequest\r\n          <span class=\"token comment\">//uploadId, key, parts 세개를 받고있고, parts는 partNumber와 eTag를 받고있습니다.</span>\r\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// AWS SDK</span>\r\n      <span class=\"token class-name\">AmazonS3</span> s3Client <span class=\"token operator\">=</span> s3Service<span class=\"token punctuation\">.</span><span class=\"token function\">getS3Client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PartETag</span><span class=\"token punctuation\">></span></span> partETags <span class=\"token operator\">=</span> fileUploadCompleteRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getParts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n              <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PartETag</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">getPartNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getETag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n              <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">CompleteMultipartUploadRequest</span> completeRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CompleteMultipartUploadRequest</span><span class=\"token punctuation\">(</span>\r\n          <span class=\"token punctuation\">[</span>s3 bucket 주소<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n                fileUploadCompleteRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n                fileUploadCompleteRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getUploadId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n                partETags\r\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        s3Client<span class=\"token punctuation\">.</span><span class=\"token function\">completeMultipartUpload</span><span class=\"token punctuation\">(</span>completeRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span>  <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INTERNAL_SERVER_ERROR</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Compleye failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span>\r\n\r\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"완료\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token annotation punctuation\">@Data</span>\r\n  <span class=\"token annotation punctuation\">@Builder</span>\r\n  <span class=\"token annotation punctuation\">@NoArgsConstructor</span>\r\n  <span class=\"token annotation punctuation\">@AllArgsConstructor</span>\r\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileUploadCompleteRequest</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token annotation punctuation\">@Schema</span><span class=\"token punctuation\">(</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"uploadId\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"uploadId\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> uploadId<span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token annotation punctuation\">@Schema</span><span class=\"token punctuation\">(</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"fileSavePath\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"fileSavePath\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> fileSavePath<span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token annotation punctuation\">@Schema</span><span class=\"token punctuation\">(</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"parts\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"parts\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UploadedPart</span><span class=\"token punctuation\">></span></span> parts<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token annotation punctuation\">@Data</span>\r\n  <span class=\"token annotation punctuation\">@Builder</span>\r\n  <span class=\"token annotation punctuation\">@NoArgsConstructor</span>\r\n  <span class=\"token annotation punctuation\">@AllArgsConstructor</span>\r\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UploadedPart</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token annotation punctuation\">@NotBlank</span>\r\n          <span class=\"token annotation punctuation\">@Schema</span><span class=\"token punctuation\">(</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"partNumber\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"partNumber\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> partNumber<span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token annotation punctuation\">@JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"eTag\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token annotation punctuation\">@Schema</span><span class=\"token punctuation\">(</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"eTag\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"eTag\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> eTag<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>질문</p>\n<p>Q1. Presigned URL에서 사용하는 API가 왜 두 개 인가요?</p>\n<p>A1. '/api/upload/presigned-url/start' start api에서는 presigned-url을 프론트로 보내는 역할을 하고, '/api/upload/presigned-url/complete' complete api에서는 presigned url에 올린 multipart 파일이 모두 올라간 경우 하나의 파일로 합치는 과정을 진행합니다.</p>\n<p>Q2. uploadId, partNumber, etag 얘네들은 뭐죠??</p>\n<p>A2. uploadId는 S3에 올린 파일 정보의 고유 번호, partNumber는 S3에 올린 Multipart File의 인덱스번호, eTag는 S3에서 보내준 Multipart File의 고유 번호입니다.</p>\n<p>Q3. 프론트에서 eTag가 undefined 오류가 떠요!!!</p>\n<p>A3. multipart file을 업로드시 S3쪽에서 response header에 eTag값을 줍니다.\r\n이 경우 제대로 받으려면 S3 CORS 설정을 해야합니다. AWS 웹 콘솔에 들어가서 권한 탭을 들어가 CORS를 수정하는 부분이 있는데, 기본적으로 \"AllowedHeaders\": [ \"*\" ], .... 등이 들어가 있을거예요. 이곳에서 편집을 이용해 \"ExposeHeaders\": [\"ETag\"] 내용을 넣어주면 됩니다.</p>\n<p>Q4. 백엔드 UploadedPart DTO안에 eTag 위에 있는 JsonProperty 어노테이션은 무엇인가요?</p>\n<p>A4. 자바 빈 규칙으로 인해, 두 번 째 글자가 대문자로 오는 경우 제대로 인식하지 못합니다. 그래서 etag로 데이터가 들어온것으로 판단해, 프론트에서 eTag로 데이터를 보낸다해도, 서버에서는 인식하지 못합니다. 그래서 eTag라는 '이름의 데이터다!' 라고 표현하는 어노테이션입니다.</p>\n</blockquote>\n<h3 id=\"2-서버에-스트리밍-방식으로-multipartFile-올리는-로직\" style=\"position:relative;\"><a href=\"#2-%EC%84%9C%EB%B2%84%EC%97%90-%EC%8A%A4%ED%8A%B8%EB%A6%AC%EB%B0%8D-%EB%B0%A9%EC%8B%9D%EC%9C%BC%EB%A1%9C-multipartFile-%EC%98%AC%EB%A6%AC%EB%8A%94-%EB%A1%9C%EC%A7%81\" aria-label=\"2 서버에 스트리밍 방식으로 multipartFile 올리는 로직 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>2. 서버에 스트리밍 방식으로 multipartFile 올리는 로직</h3>\n<h4 id=\"React-1\" style=\"position:relative;\"><a href=\"#React-1\" aria-label=\"React 1 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>React</h4>\n<p>동작방식</p>\n<ol>\n<li>프론트에서 파일 정보를 보내 백엔드에서 Upload Id를 받아옵니다.</li>\n<li>프론트에서 파일을 잘라 Multipart File을 백엔드에 스트리밍 형태로 올립니다.</li>\n<li>백엔드에서 받은 Multipart File을 S3에 업로드합니다.</li>\n<li>S3에 다 올라가면, Multipart File을 합칠 수 있도록 프론트에서 백엔드로 요청합니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> FileUploader <span class=\"token operator\">=</span> <span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>files<span class=\"token punctuation\">,</span> setFiles<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> useState<span class=\"token operator\">&lt;</span>File<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token function\">useImperativeHandle</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      <span class=\"token function-variable function\">saveFiles</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> onSaveFiles<span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSaveFiles</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// 2. 서버에 스트리밍 방식으로 multipartFile 올리는 로직</span>\r\n\r\n      <span class=\"token comment\">// 각 part마다 크기 설정 AWS S3는 최소 5MB</span>\r\n      <span class=\"token keyword\">const</span> chunkSize <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> file <span class=\"token keyword\">of</span> files<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">await</span> <span class=\"token function\">processUploadMultipartFileWithStreaming</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> chunkSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span>\r\n\r\n      <span class=\"token operator\">...</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">// 2. 서버에 스트리밍 방식으로 multipartFile 올리는 로직</span>\r\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">processUploadMultipartFileWithStreaming</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> File<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">chunkSize</span><span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// 각 part마다 크기 설정 AWS S3는 최소 5MB</span>\r\n      <span class=\"token keyword\">const</span> partCount <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>size <span class=\"token operator\">/</span> chunkSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">let</span> uploadedSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token comment\">// 1. 서버에 uploadId 요청</span>\r\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> uploadId<span class=\"token punctuation\">,</span> key <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/upload/server/start\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">fileName</span><span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\r\n          <span class=\"token literal-property property\">fileType</span><span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span>type\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">uploadedParts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">partNumber</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span> eTag<span class=\"token operator\">:</span> string <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token comment\">// chunk 파일 업로드 로직</span>\r\n      <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">uploadChunk</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> start <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> chunkSize<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">const</span> end <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span> start <span class=\"token operator\">+</span> chunkSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">const</span> chunk <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">const</span> formData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        formData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uploadId'</span><span class=\"token punctuation\">,</span> uploadId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        formData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        formData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chunk'</span><span class=\"token punctuation\">,</span> blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        formData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'partNumber'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/upload/server/start\"</span><span class=\"token punctuation\">,</span> formData<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"multipart/form-data\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 생략해도 브라우저가 알아서 넣음</span>\r\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        uploadedParts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span> <span class=\"token comment\">// partNumber, eTag</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">await</span> <span class=\"token function\">asyncPool</span><span class=\"token punctuation\">(</span>\r\n        <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\r\n        Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> partCount <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n        uploadChunk\r\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token comment\">// 4. 완료요청</span>\r\n      <span class=\"token keyword\">await</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/upload/server/complete\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token literal-property property\">uploadId</span><span class=\"token operator\">:</span> uploadId<span class=\"token punctuation\">,</span>\r\n          <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> key<span class=\"token punctuation\">,</span>\r\n          <span class=\"token literal-property property\">parts</span><span class=\"token operator\">:</span> uploadedParts<span class=\"token punctuation\">,</span>\r\n          <span class=\"token literal-property property\">fileSize</span><span class=\"token operator\">:</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">// 브라우저에서 요청하는 api 호출 개수 조절</span>\r\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> asyncPool<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\r\n      <span class=\"token literal-property property\">poolLimit</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">array</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token function-variable function\">iteratorFn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">item</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">index</span><span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Promise<span class=\"token operator\">&lt;</span><span class=\"token constant\">R</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span><span class=\"token constant\">R</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">ret</span><span class=\"token operator\">:</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">executing</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> item <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">iteratorFn</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        ret<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>p <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 결과 배열에 추가</span>\r\n\r\n        <span class=\"token comment\">// poolLimit 이하로만 실행</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>poolLimit <span class=\"token operator\">&lt;=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">e</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span>any<span class=\"token operator\">></span> <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> executing<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>executing<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          executing<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>executing<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> poolLimit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">race</span><span class=\"token punctuation\">(</span>executing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 제일 먼저 끝난 작업 기다림</span>\r\n          <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n\r\n      <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 전체 완료 대기</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">...</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n\r\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\r\n  <span class=\"token comment\">//Upload Id 요청 API</span>\r\n  <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/api/upload/server/start\"</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FileUploadStartResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">startMultipartUploadWithStreaming</span><span class=\"token punctuation\">(</span>\r\n          <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileName\"</span><span class=\"token punctuation\">)</span> <span class=\"token annotation punctuation\">@NotBlank</span> <span class=\"token class-name\">String</span> fileName\r\n          <span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileType\"</span><span class=\"token punctuation\">)</span> <span class=\"token annotation punctuation\">@NotBlank</span> <span class=\"token class-name\">String</span> fileType\r\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// AWS SDK</span>\r\n      <span class=\"token class-name\">AmazonS3</span> s3Client <span class=\"token operator\">=</span> <span class=\"token class-name\">AmazonS3ClientBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">standard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">withRegion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Regions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AP_NORTHEAST_2</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token comment\">// S3에 저장될 키 값(S3 내에서는 파일명으로 봐도 된다.)</span>\r\n      <span class=\"token class-name\">String</span> key <span class=\"token operator\">=</span> <span class=\"token string\">\"upload/\"</span> <span class=\"token operator\">+</span> <span class=\"token constant\">UUID</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">+</span> fileName<span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token class-name\">ObjectMetadata</span> metadata <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      metadata<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span>fileType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token class-name\">String</span> uploadId <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">InitiateMultipartUploadRequest</span> initRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InitiateMultipartUploadRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>s3 bucket 주소<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withObjectMetadata</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        uploadId <span class=\"token operator\">=</span> s3Client<span class=\"token punctuation\">.</span><span class=\"token function\">initiateMultipartUpload</span><span class=\"token punctuation\">(</span>initRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUploadId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INTERNAL_SERVER_ERROR</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Presigned URL failed for file: \"</span> <span class=\"token operator\">+</span> fileName <span class=\"token operator\">+</span> <span class=\"token string\">\". Error: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span>\r\n\r\n      <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileUploadStartResponse</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">uploadId</span><span class=\"token punctuation\">(</span>uploadId<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token annotation punctuation\">@Data</span>\r\n  <span class=\"token annotation punctuation\">@Builder</span>\r\n  <span class=\"token annotation punctuation\">@NoArgsConstructor</span>\r\n  <span class=\"token annotation punctuation\">@AllArgsConstructor</span>\r\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UploadedPart</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token annotation punctuation\">@NotBlank</span>\r\n          <span class=\"token annotation punctuation\">@Schema</span><span class=\"token punctuation\">(</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"partNumber\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"partNumber\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> partNumber<span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token annotation punctuation\">@JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"eTag\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> eTag<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token comment\">// Multipart File 업로드 API</span>\r\n  <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/api/upload/server/start\"</span><span class=\"token punctuation\">,</span> produces <span class=\"token operator\">=</span> <span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON_VALUE</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UploadedPart</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">uploadMultipartFilesWithStreaming</span><span class=\"token punctuation\">(</span>\r\n            <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"chunk\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">MultipartFile</span> chunk<span class=\"token punctuation\">,</span>\r\n            <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"key\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span>\r\n            <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"uploadId\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> uploadId<span class=\"token punctuation\">,</span>\r\n            <span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"partNumber\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">int</span> partNumber\r\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\r\n\r\n        <span class=\"token comment\">// AWS SDK</span>\r\n        <span class=\"token class-name\">AmazonS3</span> s3Client <span class=\"token operator\">=</span> <span class=\"token class-name\">AmazonS3ClientBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">standard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                      <span class=\"token punctuation\">.</span><span class=\"token function\">withRegion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Regions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AP_NORTHEAST_2</span><span class=\"token punctuation\">)</span>\r\n                      <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">ObjectMetadata</span> metadata <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMetadata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        metadata<span class=\"token punctuation\">.</span><span class=\"token function\">setContentLength</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        metadata<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">.</span><span class=\"token function\">getContentType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">UploadPartRequest</span> partRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UploadPartRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withBucketName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>s3 bucket 주소<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withUploadId</span><span class=\"token punctuation\">(</span>uploadId<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withPartNumber</span><span class=\"token punctuation\">(</span>partNumber<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withInputStream</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withPartSize</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">UploadPartResult</span> partResult <span class=\"token operator\">=</span> s3Client<span class=\"token punctuation\">.</span><span class=\"token function\">uploadPart</span><span class=\"token punctuation\">(</span>partRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UploadedPart</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">eTag</span><span class=\"token punctuation\">(</span>partResult<span class=\"token punctuation\">.</span><span class=\"token function\">getETag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">partNumber</span><span class=\"token punctuation\">(</span>partNumber<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token comment\">// Multipart File을 하나의 파일로 합치는 API</span>\r\n  <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/api/upload/server/complete\"</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">completeMultipartUpload</span><span class=\"token punctuation\">(</span>\r\n          <span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">FileUploadCompleteRequest</span> fileUploadCompleteRequest\r\n          <span class=\"token comment\">//uploadId, key, parts 세개를 받고있고, parts는 partNumber와 eTag를 받고있습니다.</span>\r\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token comment\">// AWS SDK</span>\r\n      <span class=\"token class-name\">AmazonS3</span> s3Client <span class=\"token operator\">=</span> <span class=\"token class-name\">AmazonS3ClientBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">standard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">withRegion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Regions</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AP_NORTHEAST_2</span><span class=\"token punctuation\">)</span>\r\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PartETag</span><span class=\"token punctuation\">></span></span> partETags <span class=\"token operator\">=</span> fileUploadCompleteRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getParts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PartETag</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">getPartNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getETag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token class-name\">CompleteMultipartUploadRequest</span> completeRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CompleteMultipartUploadRequest</span><span class=\"token punctuation\">(</span>\r\n                <span class=\"token punctuation\">[</span>s3 bucket 주소<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n                fileUploadCompleteRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n                fileUploadCompleteRequest<span class=\"token punctuation\">.</span><span class=\"token function\">getUploadId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n                partETags\r\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        s3Client<span class=\"token punctuation\">.</span><span class=\"token function\">completeMultipartUpload</span><span class=\"token punctuation\">(</span>completeRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span>  <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INTERNAL_SERVER_ERROR</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Complete failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span>\r\n\r\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"완료\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token annotation punctuation\">@Data</span>\r\n  <span class=\"token annotation punctuation\">@Builder</span>\r\n  <span class=\"token annotation punctuation\">@NoArgsConstructor</span>\r\n  <span class=\"token annotation punctuation\">@AllArgsConstructor</span>\r\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileUploadCompleteRequest</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token annotation punctuation\">@Schema</span><span class=\"token punctuation\">(</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"uploadId\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"uploadId\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> uploadId<span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token annotation punctuation\">@Schema</span><span class=\"token punctuation\">(</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"fileSavePath\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"fileSavePath\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> fileSavePath<span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token annotation punctuation\">@Schema</span><span class=\"token punctuation\">(</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"parts\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"parts\"</span><span class=\"token punctuation\">)</span>\r\n          <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UploadedPart</span><span class=\"token punctuation\">></span></span> parts<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n</code></pre></div>\n<h3 id=\"구현-후-업로드-속도-비교\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84-%ED%9B%84-%EC%97%85%EB%A1%9C%EB%93%9C-%EC%86%8D%EB%8F%84-%EB%B9%84%EA%B5%90\" aria-label=\"구현 후 업로드 속도 비교 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>구현 후 업로드 속도 비교</h3>\n<ol>\n<li>\n<p>Presigned URL 파일 업로드</p>\n<ol>\n<li>단일\n<ol>\n<li>기존 : 50MB / 10초 => 네트워크 망 개선 전 : 50MB / 14분</li>\n</ol>\n</li>\n<li>Multipart File\n<ol>\n<li>네트워크 망 개선 전 : 50MB / 2분</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>서버에 파일을 올려서 S3에 업로드</p>\n<ol>\n<li>단일\n<ol>\n<li>네트워크 망 개선 전 : 50MB / 18초, 100MB / 30초</li>\n</ol>\n</li>\n<li>Multipart File\n<ol>\n<li>네트워크 망 개선 전 : 50MB / 18초, 100MB / 38초</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>결과</p>\n<ol>\n<li>네트워크 망이 좋지 않은 경우 서버에 파일을 올리는게 획기적으로 빨랐다.</li>\n<li>서버에 파일을 업로드하여 S3에 올리는 경우, 오히려 Multipart File을 이용하면 더 느리다.</li>\n</ol>\n<h3 id=\"이후-네트워크-망-속도-개선-된-후-업로드-속도\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%ED%9B%84-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EB%A7%9D-%EC%86%8D%EB%8F%84-%EA%B0%9C%EC%84%A0-%EB%90%9C-%ED%9B%84-%EC%97%85%EB%A1%9C%EB%93%9C-%EC%86%8D%EB%8F%84\" aria-label=\"이후 네트워크 망 속도 개선 된 후 업로드 속도 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>이후 네트워크 망 속도 개선 된 후 업로드 속도</h3>\n<ol>\n<li>\n<p>Presigned URL 파일 업로드</p>\n<ol>\n<li>단일\n<ol>\n<li>네트워크 망 개선 전 : 50MB / 14분</li>\n<li>네트워크 망 개선 후 : 50MB / 14초, 100MB / 30초</li>\n</ol>\n</li>\n<li>Multipart File\n<ol>\n<li>네트워크 망 개선 전 : 50MB / 2분</li>\n<li>네트워크 망 개선 후 : 50MB / 4초, 100MB / 6초</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>서버에 파일을 올려서 S3에 업로드</p>\n<ol>\n<li>단일\n<ol>\n<li>네트워크 망 개선 전 : 50MB / 18초, 100MB / 30초</li>\n<li>네트워크 망 개선 후 : 50MB / 18초, 100MB / 30초</li>\n</ol>\n</li>\n<li>Multipart File\n<ol>\n<li>네트워크 망 개선 전 : 50MB / 18초, 100MB / 38초</li>\n<li>네트워크 망 개선 후 : 50MB / 18초, 100MB / 38초</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"결과\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC\" aria-label=\"결과 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>결과</h2>\n<ol>\n<li>네트워크 망 개선 전에는 클라이언트에서 S3 접근 속도가 비정상적으로 느렸다. 그래서 Multipart로 파일을 업로드 시켜도 엄청나게 속도가 개선이 되었지만, 아직도 느렸다.</li>\n<li>서버로 파일을 올리는건 네트워크 망이 느려진 곳에 거치지 않는 것으로 판단된다. 그래서 네트워크 망이 개선되기 전까지 서버에 파일을 업로드 시켜서 S3에 넣을 수 있도록 하였다.</li>\n<li>무조건 Multipart File이 좋진 않았다. 서버에 Multipart File을 올리는 경우 단일로 올리는 것보다 속도가 느렸다.</li>\n</ol>\n<h2 id=\"고촬\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EC%B4%AC\" aria-label=\"고촬 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>고촬</h2>\n<ol>\n<li>\n<p>네트워크 망이 안좋았는데 왜 서버로 파일을 올리는건 빨랐을까?</p>\n<p>프론트 서버와 백엔드 서버 둘다 AWS에 있다.</p>\n<p>클라이언트 => 무수히 많은 방화벽 => 백엔드</p>\n<p>아마 내 예상으로 네트워크 이슈가 AWS 서버까지가 아니고 AWS S3 서버까지에서 이슈가 있었던 것으로 판단된다. 그래서 클라이언트에 AWS 서버로 파일이 올라가는건 정상적인 속도가 나왔고, AWS 서버와 S3 서버 끼리도 속도가 빨랐던것 같다.</p>\n</li>\n<li>\n<p>Multipart File로 파일을 올리는 경우 속도가 자른 파일 개수만큼 빨라질 것이라 판단했으나 그렇지 않았다. 그 이유는 무엇일까?</p>\n<p>브라우저에서 API을 호출할 때 100MB면 10MB단위로 잘랐기 때문에 10번의 요청을 보냈다. 각 요청마다 서버가 감당하지 못하고, 느리게 처리된 것이다. 그럼 왜 서버가 감당하지 못했냐면? MultipartFile은 스트리밍 방식이 사실 아니었기 때문... MultipartFile을 InputSrteam으로 바꾸었으면 조금 달라지지 않았을까 한다.</p>\n</li>\n</ol>","frontmatter":{"title":"SpringBoot, React, S3 Presigned URL, Multipart File을 이용해 파일 업로드 속도를 개선해보자","date":"April 18, 2025","update":"April 18, 2025","tags":["react","springboot","presigned url","multipart"],"series":"File Upload","emoji":"🚀"},"fields":{"slug":"/posts/react/file-upload/multipart/","readingTime":{"minutes":17.67}}},"seriesList":{"edges":[{"node":{"id":"094bd54a-dde7-55cc-9ed8-9452d5577740","fields":{"slug":"/posts/react/file-upload/presined-url/"},"frontmatter":{"title":"SpringBoot, React, S3 Presigned URL을 이용하여 파일 업로드를 해보자","emoji":"🚀"}}},{"node":{"id":"101eb83b-5428-5522-ace9-76cd8d4e33b7","fields":{"slug":"/posts/react/file-upload/multipart/"},"frontmatter":{"title":"SpringBoot, React, S3 Presigned URL, Multipart File을 이용해 파일 업로드 속도를 개선해보자","emoji":"🚀"}}}]},"previous":{"fields":{"slug":"/posts/react/file-upload/presined-url/"},"frontmatter":{"title":"SpringBoot, React, S3 Presigned URL을 이용하여 파일 업로드를 해보자"}},"next":null},"pageContext":{"id":"101eb83b-5428-5522-ace9-76cd8d4e33b7","series":"File Upload","previousPostId":"094bd54a-dde7-55cc-9ed8-9452d5577740","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}