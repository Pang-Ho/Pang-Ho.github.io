{"componentChunkName":"component---src-templates-post-jsx","path":"/posts/react/websocket/index.md/","result":{"data":{"site":{"siteMetadata":{"title":"THE GREAT PANG"}},"markdownRemark":{"id":"63009e86-731a-564d-a309-52e24dc18004","excerpt":"배경 유튜브를 보다가 좋아요 수가 계속 올라가는 걸 보았다. 문득 API로만 웹 개발을 해온 나로서, 이거 어떻게 구현된거지? 어떻게 된거지? 생각이 들었다. 주기적으로 API를 요청하는 것이라 생각하고 gpt에게 구현 방법을 물어봤다. WebSocket? 채팅에서 사용하는 그 무언가… 라고 알고있었는데, 이걸 좋아요에서 사용한다? 흥미롭다 WebSock…","html":"<h2 id=\"배경br\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EA%B2%BDbr\" aria-label=\"배경br permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>배경<br></h2>\n<p>유튜브를 보다가 좋아요 수가 계속 올라가는 걸 보았다. 문득 API로만 웹 개발을 해온 나로서, 이거 어떻게 구현된거지? 어떻게 된거지? 생각이 들었다. 주기적으로 API를 요청하는 것이라 생각하고 gpt에게 구현 방법을 물어봤다.<br>\nWebSocket? 채팅에서 사용하는 그 무언가… 라고 알고있었는데, 이걸 좋아요에서 사용한다?<br>\n흥미롭다</p>\n<h2 id=\"WebSocket이란-무엇인가br\" style=\"position:relative;\"><a href=\"#WebSocket%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80br\" aria-label=\"WebSocket이란 무엇인가br permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>WebSocket이란 무엇인가<br></h2>\n<p>우리가 사용하는 API 이건 요청을 하면 응답을 하고 끝난다. 그렇지만 WebSocket은 연결이 계속 유지되면서 데이터가 이동한다.<br>\nAPI는 뭘 했길래 요청 응답만 하고, WebSocket은 계속 연결이 유지될까?<br>\nAPI는 HTTP 라는 프로토콜을 사용한다. WebSocket은 프로토콜이다.</p>\n<ul>\n<li>HTTP</li>\n<li>WebSocket</li>\n</ul>\n<h2 id=\"연결이-유지되는-과정br\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EA%B2%B0%EC%9D%B4-%EC%9C%A0%EC%A7%80%EB%90%98%EB%8A%94-%EA%B3%BC%EC%A0%95br\" aria-label=\"연결이 유지되는 과정br permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>연결이 유지되는 과정<br></h2>\n<ol>\n<li>HTTP 요청처럼 서버에 GET 요청으로 웹소켓 연결(handshake)을 요청한다. 여기서 중요한건 헤더에 넣어지는 내용이다.\n<ol>\n<li>Upgrade: websocket</li>\n<li>Connection: Upgrade</li>\n</ol>\n</li>\n<li>서버에서 websocket 프로토콜로 Upgrade 한다는 요청(handshake)을 승인한다.\n<ol>\n<li>101 Switching Protocols</li>\n</ol>\n</li>\n<li><code class=\"language-text\">ws://</code> 로 시작되는 데이터를 주고받는다.</li>\n</ol>\n<h2 id=\"WebSocket과-함께-사용하는-STOMPbr\" style=\"position:relative;\"><a href=\"#WebSocket%EA%B3%BC-%ED%95%A8%EA%BB%98-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-STOMPbr\" aria-label=\"WebSocket과 함께 사용하는 STOMPbr permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>WebSocket과 함께 사용하는 STOMP<br></h2>\n<p>WebSocket을 얘기하면 STOMP가 같이 따라온다. STOMP는 무엇인지 왜 같이 사용하는지 말해보고자 한다.</p>\n<h3 id=\"STOMPSimple-Text-Oriented-Messaging-Protocolbr\" style=\"position:relative;\"><a href=\"#STOMPSimple-Text-Oriented-Messaging-Protocolbr\" aria-label=\"STOMPSimple Text Oriented Messaging Protocolbr permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>STOMP(Simple Text Oriented Messaging Protocol)<br></h3>\n<p>WebSocket은 양방향 연결만 해주고, 바이트 스트림 형태로만 데이터를 전달할 수 있다. 나는 어떤 채널에서 다양한 데이터를 주고받고 싶은데 WebSocket만으로는 문자열만 보낼 수 있다.<br>\n그래서 WebSocket 위에서 동작하는 메시징 프로토콜로 HTTP처럼 메시지 양식을 만들어 데이터를 보낸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext  \"><pre class=\"language-plaintext  \"><code class=\"language-plaintext  \">SEND\ndestination:/queue/messages\ncontent-type:aaplication/json\n\n{\n\t&quot;id&quot;: &quot;1&quot;,\n\t&quot;message&quot;: &quot;Hello&quot;\n}  </code></pre></div>\n<p>위 메시지에서 상단에 쓰는 내용은 명령어다. 명령어로는 CONNECT, SEND, SUBSCRIBE 같이 메시지 발행, 트랜잭션 관리, 에러 처리 등 여러 역할을 부여할 수 있다.</p>\n<h2 id=\"WebSocket을-쓰면-성능-이슈가-생길거-같은데br\" style=\"position:relative;\"><a href=\"#WebSocket%EC%9D%84-%EC%93%B0%EB%A9%B4-%EC%84%B1%EB%8A%A5-%EC%9D%B4%EC%8A%88%EA%B0%80-%EC%83%9D%EA%B8%B8%EA%B1%B0-%EA%B0%99%EC%9D%80%EB%8D%B0br\" aria-label=\"WebSocket을 쓰면 성능 이슈가 생길거 같은데br permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>WebSocket을 쓰면 성능 이슈가 생길거 같은데<br></h2>\n<p>연결을 계속 하는건데 유튜브처럼 몇 억 명이 쓰는 상황을 대처하는걸까?<br>\n수많은 사람들을 대응해야 한다면 당연히 서버는 여러 인스턴스를 만들어 로드밸런싱을 이용할 것이다.<br>\n이러면 서버의 WebSocket이 여러개가 되는데, 클라이언트끼리 서로 다른 WebSocket에 연결되어있는 경우 당연히 데이터가 전달이 안된다. 그러면 어떻게 유지할건지를 생각해야한다.</p>\n<h3 id=\"Redisbr\" style=\"position:relative;\"><a href=\"#Redisbr\" aria-label=\"Redisbr permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Redis<br></h3>\n<p>어디선가 들어본 인메모리 데이터베이스, 이를 사용한다. Redis는 인메모리 DB지만, 처리속도가 매우 빠르고 수만 TPS를 감당할 수 있기 때문에 단일 인스턴스로 구성하여 사용한다.<br>\n나는 메시지 이동용으로 사용할것이기 때문에 데이터를 저장하고 조회하는 일반 Redis가 아닌 데이터를 전달만하는 Redis Pub/Sub를 이용해 메시지 브로커 기능을 이용할 것이다.<br>\n내 상황에선 여러 SpringBoot로 이루어진 WAS 서버가 있고, 각 WAS 서버의 Redis 클라이언트가 다른 <code class=\"language-text\">Redis 서버</code> 와 연결하여 사용할 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext  \"><pre class=\"language-plaintext  \"><code class=\"language-plaintext  \">[ Client A ] ────&gt; [ WAS 서버 1 ] ────┐\n                                      │\n[ Client B ] ────&gt; [ WAS 서버 2 ] ──┐  │\n                                    ▼  ▼\n                                [ Redis 서버 ]   &lt;── (중앙 메시지 허브)\n                                     ▲  ▲\n[ Client C ] &lt;──── [ WAS 서버 3 ] ◀──┘  └── [ WAS 서버 1 ]  </code></pre></div>\n<h2 id=\"WebSocket으로-할-것br\" style=\"position:relative;\"><a href=\"#WebSocket%EC%9C%BC%EB%A1%9C-%ED%95%A0-%EA%B2%83br\" aria-label=\"WebSocket으로 할 것br permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>WebSocket으로 할 것<br></h2>\n<p>내 최종 목표는 알림기능이다. 채팅 기능을 만들어보고, 채팅이 오면 알림 기능도 만들어보고, 관리자 화면에서 대상 사용자에게 알림도 만들어보고 좋아요 기능도 만들어보자</p>","frontmatter":{"title":"Websocket에 대해 알아보자","date":"May 20, 2025","update":"May 20, 2025","tags":["react","springboot","websocket"],"series":"Websocket","emoji":"💬"},"fields":{"slug":"/posts/react/websocket/index.md/","readingTime":{"minutes":5.19}}},"seriesList":{"edges":[{"node":{"id":"63009e86-731a-564d-a309-52e24dc18004","fields":{"slug":"/posts/react/websocket/index.md/"},"frontmatter":{"title":"Websocket에 대해 알아보자","emoji":"💬"}}}]},"previous":{"fields":{"slug":"/posts/Nogi/index.md/"},"frontmatter":{"title":"Nogi를 이용하여 노션에 작성한 글을 깃허브에 자동으로 올려보자"}},"next":null},"pageContext":{"id":"63009e86-731a-564d-a309-52e24dc18004","series":"Websocket","previousPostId":"a8866e32-66c3-5b32-a342-eb5231f4b995","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}